//使用规则集和混合作为值的映射
@sizes: {
  mobile: 320px;
  tablet: 768px;
  desktop: 1024px;
}

.navbar {
  display: block;

  @media (min-width: @sizes[tablet]) {
    display: inline-block;
  }
}
//由于命名空间和重载mixin的能力，mixin作为maps更加灵活/

#library() {
    .colors() {
      primary: green;
      secondary: blue;
    }
  }
  
  #library() {
    .colors() { primary: grey; }
  }
  
  .button {
    color: #library.colors[primary];
    border-color: #library.colors[secondary];
  }

  //你也可以通过混叠来简化。那就是
  .button {
    @colors: #library.colors();
    color: @colors[primary];
    border-color: @colors[secondary];
  }

  //注意，如果查找值产生另一个规则集，您可以追加第二个[]查找，如下所示
  @config: {
    @options: {
      library-on: true
    }
  }
  
  & when (@config[@options][library-on] = true) {
    .produce-ruleset {
      prop: val;
    }
  }

  //在查找中使用变量变量
  .foods() {
    @dessert: ice cream;
  }
  
  @key-to-lookup: dessert;
  
  .lunch {
    treat: .foods[@@key-to-lookup];
  }